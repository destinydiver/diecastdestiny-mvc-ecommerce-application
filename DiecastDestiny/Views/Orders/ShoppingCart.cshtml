@using DiecastDestiny.Data.ViewModels;
@model ShoppingCartVM

@{
    ViewData["Title"] = "Shopping Cart Summary";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="text-center">
                <h2>Your Shopping Cart Summary</h2>
            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>Selected Quantity</th>
                        <th>Product Name</th>
                        <th>Price</th>
                        <th>Subtotal</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ShoppingCart.ShoppingCartItems)
                    {
                        <tr>
                            <td class="align-middle">@item.Quantity</td>
                            <td class="align-middle">@item.Product.ProductName</td>
                            <td class="align-middle">@item.Product.Price.ToString("c")</td>
                            <td class="align-middle">@((item.Quantity*item.Product.Price).ToString("c"))</td>
                            <td class="align-middle">
                                <a class="text-danger" asp-controller="Orders" asp-action="RemoveItemFromShoppingCart" asp-route-id="@item.Product.Id">
                                    <i class="bi bi-cart-dash"></i>
                                </a>
                                |
                                <a class="text-success" asp-controller="Orders" asp-action="AddItemToShoppingCart" asp-route-id="@item.Product.Id">
                                    <i class="bi bi-cart-plus"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="2"></td>
                        <td><b>Total: </b></td>
                        <td>
                            @Model.ShoppingCartTotal.ToString("c")
                        </td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>

            <div class="text-center">
                <div class="btn-group">
                    @*<a class="btn btn-primary" asp-action="CompleteOrder">
                        Complete Order
                    </a>*@

                    <div id="paypal-btn"></div>
                    <span style="padding:5px"></span>
                    <a class="btn btn-success" asp-controller="Products" asp-action="Index">
                        Add More Items
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script src="https://www.paypalobjects.com/api/checkout.js"></script>

    <script>

        let _total = @Html.Raw(Model.ShoppingCartTotal);

paypal.Button.render({
    //Configure environment
    env: 'sandbox',
    client: {
        sandbox: 'Aeq8-PZ87WLAdK5w8KrHvbM2H2Nz7XBwg1hFeYqNPTyASC6McydRnVUaUpCyAESYMYw9mLwkkiZaM-82'
    },

    //Customize Button
    locale: 'en_US',
    style: {
        size: 'medium',
        color: 'gold',
        shape: 'pill'
    },
    commit: true,

    // Set Up Payment
    payment: function(data, actions) {
        return actions.payment.create({
            transactions: [{
                amount: {
                    total: _total,
                    currency: 'USD'
                }
            }]
        });
    },

    // Execute Payment
    onAuthorize: function(data, actions) {
        return actions.payment.execute().then(function() {
            var url = '@Url.Action("CompleteOrder", "Orders", new { })';
            window.location.href = url;
        });
    }

}, '#paypal-btn');
    </script>
}


